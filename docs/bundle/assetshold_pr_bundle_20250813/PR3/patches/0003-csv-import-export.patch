*** a/server.js
--- b/server.js
@@
-// CSV import endpoint (simplified)
+// CSV import endpoint (strict validation & tx rollback)
 app.post('/api/import', async (req, res) => {
   const csv = req.files?.file?.data?.toString('utf-8') || '';
-  // existing import...
+  const { parse } = require('csv-parse/sync');
+  const { validateHeaders, validateRow } = require('./server/csv/normalize');
+  const records = parse(csv, { columns: true, skip_empty_lines: true, trim: true });
+  validateHeaders(Object.keys(records[0]||{}));
+  const db = getDb();
+  await runInTx(db, async () => {
+    for (const r of records) {
+      const row = validateRow(r);
+      await upsertAsset(db, row);
+    }
+  });
+  res.json({ ok:true, count: records.length });
 });
@@
+// Export endpoint (csv|md|json)
+app.get('/api/export', async (req, res) => {
+  const format = (req.query.format || 'csv').toLowerCase();
+  const assets = await getAllAssets();
+  if (format === 'json') return res.json(assets);
+  if (format === 'md') {
+    const md = assets.map(a => `- ${a.class}: ${a.name}${a.note ? '（' + a.note + '）' : ''} - 簿価: ${a.book_value_jpy}円`).join('\\n');
+    res.set('Content-Type','text/markdown; charset=utf-8');
+    return res.send(`# 資産一覧\\n\\n${md}\\n`);
+  }
+  // csv
+  const headers = Object.keys(assets[0] || {class:1,name:1});
+  const lines = [headers.join(',')].concat(assets.map(a=>headers.map(h=>a[h]??'').join(',')));
+  res.set('Content-Type','text/csv; charset=utf-8');
+  res.send(lines.join('\\n'));
+});
